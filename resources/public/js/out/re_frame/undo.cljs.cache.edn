;; Analyzed by ClojureScript 0.0-3269
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name re-frame.undo, :imports nil, :requires {re-frame.utils re-frame.utils, reagent reagent.core, reagent.core reagent.core, re-frame.db re-frame.db, handlers re-frame.handlers, re-frame.handlers re-frame.handlers, subs re-frame.subs, re-frame.subs re-frame.subs}, :uses {app-db re-frame.db, warn re-frame.utils}, :defs {undo-n {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 113, :column 8, :end-line 113, :end-column 14, :private true, :arglists (quote ([n])), :doc "undo until we reach n or run out of undos"}, :private true, :name re-frame.undo/undo-n, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 14, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "undo until we reach n or run out of undos"}, undo-explanations {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 64, :column 7, :end-line 64, :end-column 24, :arglists (quote ([])), :doc "return list of undo descriptions or empty list if no undos"}, :name re-frame.undo/undo-explanations, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "return list of undo descriptions or empty list if no undos"}, app-explain {:name re-frame.undo/app-explain, :file "resources/public/js/out/re_frame/undo.cljs", :line 29, :column 1, :end-line 29, :end-column 27, :private true, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 29, :column 16, :end-line 29, :end-column 27, :private true}}, redos? {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 60, :column 7, :end-line 60, :end-column 13, :arglists (quote ([]))}, :name re-frame.undo/redos?, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, undo-explain-list {:name re-frame.undo/undo-explain-list, :file "resources/public/js/out/re_frame/undo.cljs", :line 30, :column 1, :end-line 30, :end-column 33, :private true, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 30, :column 16, :end-line 30, :end-column 33, :private true}}, redo {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 130, :column 8, :end-line 130, :end-column 12, :private true, :arglists (quote ([undos cur redos]))}, :private true, :name re-frame.undo/redo, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 12, :method-params ([undos cur redos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 3, :fn-var true, :arglists (quote ([undos cur redos]))}, store-now! {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 43, :column 7, :end-line 43, :end-column 17, :arglists (quote ([explanation])), :doc "stores the value currently in app-db, so the user can later undo"}, :name re-frame.undo/store-now!, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 17, :method-params ([explanation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([explanation])), :doc "stores the value currently in app-db, so the user can later undo"}, redo-explain-list {:name re-frame.undo/redo-explain-list, :file "resources/public/js/out/re_frame/undo.cljs", :line 31, :column 1, :end-line 31, :end-column 33, :private true, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 31, :column 16, :end-line 31, :end-column 33, :private true}}, redo-list {:name re-frame.undo/redo-list, :file "resources/public/js/out/re_frame/undo.cljs", :line 21, :column 1, :end-line 21, :end-column 25, :private true, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 21, :column 16, :end-line 21, :end-column 25, :private true}}, redo-n {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 138, :column 8, :end-line 138, :end-column 14, :private true, :arglists (quote ([n])), :doc "redo until we reach n or run out of redos"}, :private true, :name re-frame.undo/redo-n, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 14, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "redo until we reach n or run out of redos"}, undo {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 105, :column 8, :end-line 105, :end-column 12, :private true, :arglists (quote ([undos cur redos]))}, :private true, :name re-frame.undo/undo, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 12, :method-params ([undos cur redos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 3, :fn-var true, :arglists (quote ([undos cur redos]))}, set-max-undos! {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 15, :column 7, :end-line 15, :end-column 21, :arglists (quote ([n]))}, :name re-frame.undo/set-max-undos!, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 21, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, max-undos {:name re-frame.undo/max-undos, :file "resources/public/js/out/re_frame/undo.cljs", :line 14, :column 1, :end-line 14, :end-column 25, :private true, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 14, :column 16, :end-line 14, :end-column 25, :private true}}, undo-list {:name re-frame.undo/undo-list, :file "resources/public/js/out/re_frame/undo.cljs", :line 20, :column 1, :end-line 20, :end-column 25, :private true, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 20, :column 16, :end-line 20, :end-column 25, :private true}}, clear-history! {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([]))}, :name re-frame.undo/clear-history!, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, undos? {:protocol-inline nil, :meta {:file "/Users/peteshaw/git/eventspace/resources/public/js/out/re_frame/undo.cljs", :line 56, :column 7, :end-line 56, :end-column 13, :arglists (quote ([]))}, :name re-frame.undo/undos?, :variadic false, :file "resources/public/js/out/re_frame/undo.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:redo :undo :undos? :undo-explanations :redo-explanations :redos?}, :order [:undos? :redos? :undo-explanations :redo-explanations :undo :redo]}, :doc nil}